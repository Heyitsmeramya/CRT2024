nested recursion:in this recursion,a recursive function will pass the parameter as a recursive call.that means recursion inside recursion.
#include <stdio.h>
int fun(int n)
{
    if(n>100)
        return n-10;
    return fun(fun(n+11));
}

int main()
{
    int k=fun(95);
    printf("%d",k);
    return 0;
}
indirect recursion: in this recursion, there may be more than 1 functions and they are calling one another in a circular manner.
#include <stdio.h>
void funA(int n)
{
   if(n>0)
   {
       printf("%d ",n);
       funB(n-1);
   }
}
void funB(int n)
{
    if(n>1)
    {
        printf("%d ",n);
        funA(n/2);
    }
}
main()
{
    funA(20);
}
o/p:20 19 9 8 4 3 1
eg:sum of natural numbers if your n value is 5.
#include <stdio.h>
int add(int n)
{
    if(n==0)
        return 0;
    else
        return n+add(n-1);
}
int main()
{
    int n;
    scanf("%d",&n);
    int r=add(n);
    printf("%d",r);
}

read a number and print factorial value of given number?
#include <stdio.h>
int fact(int n)
{
    if(n==0)
        return 1;
    else
        return n*fact(n-1);
}
int main()
{
    int n;
    scanf("%d",&n);
    int r=fact(n);
    printf("%d",r);
}

pgm: read a number and print sum of digits?
#include <stdio.h>
int sumofdigits(int n)
{
    int n,d,r=0;
    while(n>0)
    {
        n=n%10;
        n=n/10;
        r=r+d;
    }
}
int main()
{
    int n;
    scanf("%d",&n);
    int r=sumofdigits(n);
    printf("%d",r);
}

->IN RECURSION
#include <stdio.h>
int sumofdigits(int n)
{
    if(n==0)
        return 0;
    else
        return n%10+sumofdigits(n/10);
}
int main()
{
    int n;
    scanf("%d",&n);
    int r=sumofdigits(n);
    printf("%d",r);
}
prgm:read m,n values and print m^n values.
#include <stdio.h>
int power(int m,int n)
{
    if(n==0)
        return 1;
    else
        return m*power(m,n-1);
}
int main()
{
    int n,m;
    scanf("%d%d",&m,&n);
    int r=power(m,n);
    printf("%d",r);
}
pgm:nth fibnocci number
#include <stdio.h>
int fib(int n)
{
    if(n==0 || n==1)
        return n;
    else
        return fib(n-1)+fib(n-2);
}
int main()
{
    int n;
    scanf("%d",&n);
    int r=fib(n);
    printf("%d",r);
}



